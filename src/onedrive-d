#!/bin/bash

# onedrive-d
# 
# OneDrive daemon application
# 
# @author	Xiangyu Bu
# @update	Jan 08, 2014

# Application configuration directory
ONEDRIVED_CONF_PATH="$HOME/.onedrive"

# onedrive-d configuration file path
ONEDRIVED_CONF_FILE="$ONEDRIVED_CONF_PATH/user.conf"

# onedrive-d latest log
ONEDRIVED_CONF_LOG_NEW="$ONEDRIVED_CONF_PATH/root.log"

# skydrive-d log from last run
ONEDRIVED_CONF_LOG_LAST="$ONEDRIVED_CONFd_PATH/last_run.log"

# onedrive-d root path to sync
ONEDRIVED_ROOT_PATH=`grep "rootPath:" $ONEDRIVED_CONF_FILE | cut -d ' ' -f2`

# function action_deep_sync
# entry point for deep sync
exec_deep_sync() {
	echo "Deep synchronization not done yet..."
	python ./synchronize.py
}

exec_onedrive_mkdir() {
	echo "should make dir $1 in $2."
	# cmd to exec
}

# function exec_onedrive_mv $from $to
# move the path from $from to $to
exec_onedrive_mvdir() {
	echo "should do Directory $1 moved to $2."
	# cmd to exec
}

exec_onedrive_rmdir() {
	echo "should delete directory $1 from $2."
	# cmd to exec
}

exec_onedrive_rm() {
	echo "should delete file $1 from $2."
	# cmd to exec
}

# more actions TBA.

# At first run, perform partial or deep sync
if [ -f "$ONEDRIVED_CONF_LOG_NEW" ]
then
	mv "$ONEDRIVED_CONF_LOG_NEW" "$ONEDRIVED_CONF_LOG_LAST"
	# ls $ONEDRIVED_ROOT_PATH -Rl --time-style "+%Y-%m-%dT%H:%M:%S"
else
	echo "No log ($ONEDRIVED_CONF_LOG_NEW) exists. Do you want to make a deep sync between OneDrive server and your local directory \"$ONEDRIVED_ROOT_PATH\"?"
	echo " * Files that don't exist locally will be downloaded."
	echo " * Local Files that are newer than the server version will be uploaded."
	echo " * Local Files that are older than the server version will be replaced by the server version."
	read -n 1 -r -p "Proceed? [y/n] "
	echo ""	# initiate a new line.
	if [[ $REPLY =~ ^[Yy]$ ]] ; then
		exec_deep_sync
	fi
fi

moveFrom_buffer=""

# Use inotifywait to monitor file system changes
nohup inotifywait -e unmount,close_write,create,delete,delete_self,move --format "%e %f %w" -mr $ONEDRIVED_ROOT_PATH | 
while IFS=' ' read event f1 f2
# while read line
do
	# the fields may not be exactly "event dir file"
	echo "$event $f1 $f2"
	case "$event" in
		"MOVED_FROM,ISDIR" )
			moveFrom_buffer="$f2$f1"
			;;
		"MOVED_TO,ISDIR" )
			# execute the dir move function
			exec_onedrive_mvdir $eventBuffer $f2$f1
			moveFrom_buffer="" # clear buffer
			;;
		"CLOSE_WRITE,CLOSE" )
			# file data changes or created
			;;
		"CREATE,ISDIR" )
			# create a directory
			exec_onedrive_mkdir $f1 $f2
			;;
		"DELETE" )
			# file deletion
			exec_onedrive_rm $f1 $f2
			;;
		"DELETE,ISDIR" )
			# delete a directory
			exec_onedrive_rmdir $f1 $f2
			;;
	esac
done
